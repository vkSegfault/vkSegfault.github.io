[ { "title": "Terraform remote backend", "url": "/posts/terraform-remote-backend/", "categories": "cloud", "tags": "terraform, aws", "date": "2023-03-14 00:00:00 +0100", "snippet": "It is usually a case that for very small (and sometimes even for medium-sized projects) we store our Terraform state file(s) as a part of our repo - in other words we use local state. While this might work quite well if infrastructure is not big enough and not many people will try to change it, t..." }, { "title": "Hosting Godot 4 server on AWS and Azure", "url": "/posts/godot-server-aws-azure/", "categories": "cloud, godot, aws, azure, terraform", "tags": "godot, aws, azure, python, boto3, terraform", "date": "2022-11-27 00:00:00 +0100", "snippet": "Godot is slowly1 getting to release of version 4 - probably biggest update to date. Most interesting from our perspective is rewritten networking part. While there is stable Godot 3 relase as well, basically everyone is watching out for new major version. Some game developers will jump on this ba..." }, { "title": "SIMD usage in Java", "url": "/posts/java-simd/", "categories": "CPU, SIMD", "tags": "cpu, simd, java", "date": "2021-10-13 00:00:00 +0200", "snippet": " You can consider this post as an extension to previously written SIMD usage in C++, C# and Rust. Example verified on OpenJDK 17 build running on Linux.Seems that CPU intrinsics are no longer domain of low level AOT compiled languages. We have pretty nice and easy API in .NET Core 3 and 2021 is..." }, { "title": "Gentle introduction to GPUs inner workings", "url": "/posts/gentle-intro-gpu-inner-workings/", "categories": "GPU", "tags": "gpu, low-level, hardware", "date": "2021-09-20 00:00:00 +0200", "snippet": "This article summarizes some lower level aspect of how GPU executes. Although GPU programming is not that complicated when compared to CPU, it also doesn’t match to what hardware is doing exactly. The reason is that we can’t just program GPU without some API, which is an abstraction over its inne..." }, { "title": "SIMD usage in C++, C# and Rust", "url": "/posts/simd-usage-cpp-csharp-rust/", "categories": "CPU, SIMD", "tags": "cpu, simd, cpp, csharp, rust", "date": "2021-08-06 00:00:00 +0200", "snippet": "Everyone heard of SIMD, yet not so many use it. There are probably three main reasons for that: it’s hard to write it correctly, it’s not safe and, most important, compiler can write it for us in many cases (auto vectorization). So why even bother? And answer is: bacause compilers are not that sm..." } ]
